{%- assign min = 0 -%}
{%- assign max = 9999 -%}
{%- assign diff = max | minus: min -%}
{%- assign random_number = "now" | date: "%N" | modulo: diff | plus: min -%}

    <div class="collection-sliders"> 
        <div class="collection-slider-wrapper">
            {%- if section.settings.title != blank -%}
                <h2 class="collection-slider-title">{{ section.settings.title | escape }}</h2>
            {%- endif -%}
            <div class="collection-filter">
                {%- if section.settings.filter != blank -%}
                    <button class="collection-slider-filter active-filter-bt" onclick="addFlterToSlider{{random_number}}(event,'{{ section.settings.filter }}')">{{ section.settings.filter }}</button>
                {%- endif -%}
                {%- if section.settings.filter1 != blank -%}
                    <button class="collection-slider-filter" onclick="addFlterToSlider{{random_number}}(event,'{{ section.settings.filter1 }}')">{{ section.settings.filter1 }}</button>
                {%- endif -%}
                {%- if section.settings.filter2 != blank -%}
                    <button class="collection-slider-filter" onclick="addFlterToSlider{{random_number}}(event,'{{ section.settings.filter2 }}')">{{ section.settings.filter2 }}</button>
                {%- endif -%}
                {%- if section.settings.filter3 != blank -%}
                    <button class="collection-slider-filter" onclick="addFlterToSlider{{random_number}}(event,'{{ section.settings.filter3 }}')">{{ section.settings.filter3 }}</button>
                {%- endif -%}
                {%- if section.settings.filter4 != blank -%}
                    <button class="collection-slider-filter" onclick="addFlterToSlider{{random_number}}(event,'{{ section.settings.filter4 }}')">{{ section.settings.filter4 }}</button>
                {%- endif -%}
            </div>
            <div class="custom-controls">
                <button type="button" aria-label="Preview slide" id="prev-{{ section.id }}" data-controls="prev">
                     <svg width="15" height="26" viewBox="0 0 15 26" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M13.7776 0.592285L1.41989 12.95L13.7776 25.3077" stroke="black" stroke-linecap="round"/>
                    </svg>
                </button>
                <button type="button" aria-label="Next slide" id="next-{{ section.id }}" data-controls="next">
                    <svg width="15" height="26" viewBox="0 0 15 26" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M1.44727 25.3569L13.8224 12.9818L1.44727 0.606711" stroke="black" stroke-linecap="round"/>
                    </svg>
                </button>
            </div>
            <div class="collection-slider-items">
                <div class="collection-slider" id="{{ section.id }}">
                    <div class="collection-slider-item-product-temp">
                        <div class="collection-slider-item-product-temp-item">
                            <div class="product-add-loader loading"></div> 
                        </div>
                    </div>
                    <div class="collection-slider-item-product-temp">
                        <div class="collection-slider-item-product-temp-item">
                            <div class="product-add-loader loading"></div>
                        </div>
                    </div>
                    <div class="collection-slider-item-product-temp">
                        <div class="collection-slider-item-product-temp-item">
                            <div class="product-add-loader loading"></div>
                        </div>
                    </div>
                    <div class="collection-slider-item-product-temp">
                        <div class="collection-slider-item-product-temp-item">
                            <div class="product-add-loader loading"></div>
                        </div>
                    </div>
                    <div class="collection-slider-item-product-temp">
                        <div class="collection-slider-item-product-temp-item">
                            <div class="product-add-loader loading"></div>
                        </div>
                    </div>
                    <div class="collection-slider-item-product-temp">
                        <div class="collection-slider-item-product-temp-item">
                            <div class="product-add-loader loading"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="button-style">
                <a href="{{ section.settings.collection.url }}" class="collection-slider-view-all">View All</a>
            </div>
        </div>
    </div>


 <script defer type="module">
    new Promise(async function(resolve, reject) {
        while (!loadStatus.dom) {
            await delay(50);
        }

        if(!loadStatus.react_started) {
            loadStatus.react_started = true;
            consoleMsg("react-admin.js loading cart", null, null);
            if(window.location.href.indexOf("127.0.0.1") != -1){

                var xhr = new XMLHttpRequest();

                xhr.addEventListener("load", function () {
                    loadJS("react_admin", "{{ 'http://localhost:3000/assets_replace/static/js/bundle.js' }}", "react_loaded", true); 
                    consoleMsg("Serving live local react-admin ", null, null);
                });
                xhr.onerror = function () {      
                    loadJS("react_admin", "{{ 'react-admin.js' | asset_url }}", "react_loaded", true);
                    consoleMsg("Serving local build of react-admin ", null, null);
                };

                xhr.open("GET", "http://localhost:3000/assets_replace/static/js/bundle.js");
                xhr.send();

            } else {
                loadJS("react_admin", "{{ 'react-admin.js' | asset_url }}", "react_loaded", true);
            }
        }
        resolve(true);
    });

    new Promise(async function(resolve, reject){
        while (!loadStatus.react_loaded) {
            await delay(100);
        }
        
        var sliderHandle = null

        
        const getProducts = (tagdata = []) => {
            new Promise(async function(resolve, reject) {
                while (!loadStatus.create_slider_loaded) {
                    consoleMsg("waiting for enable slick_loaded", null, null);
                    await delay(50);
                }
    
                var params = {
                    'isLoggedIn': {% if customer %}true{% else %}false{% endif %},
                    'default_vendor_logo': '{{ 'scribbler-vendor-logo.png' | asset_url }}',
                    'type': 'gift'
                };
    
                getFilteredProducts({
                    collection_title: {{ section.settings.collection.title | json }},
                    sort_order: '{{ section.settings.sort_order }}',
                    limit: {{ section.settings.products_to_show_slider }},
                    filter_tag: tagdata,
                    shopify_token: '{{ settings.api-access-token }}'
                }).then(data => {
    
                    if (data.data.collection.products.edges.length > 0) {
                        const products = data.data.collection.products.edges.map(edge => edge.node);
                        
                        const filteredProducts = products.filter(product => 
                            tagdata.some(tag => product.tags.includes(tag))
                        );

                        if (sliderHandle && typeof sliderHandle.destroy === 'function') {
                            sliderHandle.destroy();
                        }
                        
                        if(filteredProducts.length > 0){
                            document.getElementById("{{ section.id }}").innerHTML = '<div class="product-grid-add-loader loading"></div>';
                            createCardSlide(filteredProducts, params).then(html => {
                                document.getElementById("{{ section.id }}").innerHTML = html;
                                sliderHandle = tns({
                                    container: '#{{ section.id }}',
                                    items: 2,
                                    mouseDrag: true,
                                    lazyload: true,
                                    slideBy: 'page',
                                    autoplay: false,
                                    controls: true,
                                    controlsText: ["", ""],
                                    prevButton: '#prev-{{ section.id }}',
                                    nextButton: '#next-{{ section.id }}',
                                    nav: false,
                                    responsive: {
                                        200: {
                                            items: {{ section.settings.columns_mobile }},
                                        },
                                        750: {
                                            items: {{ section.settings.columns_tablet }},
                                        },
                                        990: {
                                            items: {{ section.settings.columns_small_desktop }},
                                        },
                                        1250: {
                                            items: {{ section.settings.columns_desktop }},
                                        }
                                    }
                                });
                            }).catch(error => {
                                console.error('Failed to create card slide:', error);
                                document.getElementById("{{ section.id }}").innerHTML =
                                    '<div class="no-product">Oops! Something went wrong while loading products.</div>';
                            });
                        }else{
                            document.getElementById("{{ section.id }}").innerHTML = '<div class="no-product">Oops! No matches found for '+ tagdata +' products.</div>';
                        }
                    } else {
                        if (sliderHandle && typeof sliderHandle.destroy === 'function') {
                            sliderHandle.destroy();
                        }
                        document.getElementById("{{ section.id }}").innerHTML = '<div class="no-product">Oops! No matches found. Try refining your search or discover something new in our collections below.</div>';
                    }
                }).catch(error => {
                    console.error('Error fetching products:', error);
                });
    
                resolve(true);
            });
        };

        window.addFlterToSlider{{random_number}} = (ev,tag) =>  {

            const parentElement = ev.target.parentElement;
            for (const child of parentElement.children) {
                child.classList.remove("active-filter-bt");
            }

            ev.target.classList.add("active-filter-bt");
           
            getProducts([tag])
        }

        await delay(placeholderReplace);
        getProducts(['{{ section.settings.filter }}'])
        resolve(true);
    });

    new Promise(async function(resolve, reject){
        while (!loadStatus.react_loaded) {
            await delay(50);
        }

        if(!loadStatus.create_slider_started){
            loadStatus.create_slider_started = true;
            loadJS("create_slider", "{{ 'create-slider.js' | asset_url }}", "create_slider_loaded", true);
        }

        resolve(true);
    });

    new Promise(async function(resolve, reject){
        while (!loadStatus.create_slider_loaded) {
            await delay(50);
        }

        if(!window.addFavourite){
            window.addFavourite = addFavourite;
            window.removeFavourite = removeFavourite;
            window.addToBasket = addToBasket;
        }
        resolve(true);
    });
</script>

{% schema %}
{
    "name": "t:sections.collection-gift-slider.name",
    "tag": "section",
    "class": "section",
    "settings": [
        {
            "type": "text",
            "id": "title",
            "default": "Collection gift slider",
            "label": "t:sections.collection-gift-slider.settings.title.label"
        },
        {
            "type": "collection",
            "id": "collection",
            "label": "t:sections.collection-gift-slider.settings.collection.label"
        },
        {
            "label": "Sort Order",
            "id": "sort_order",
            "type": "select",
            "options": [
                {
                    "label": "New In",
                    "value": "created-descending"
                },
                {
                    "label": "Bestsellers",
                    "value": "best-selling"
                },
                {
                    "label": "Prime Tag",
                    "value": "manual"
                }
            ],
            "default": "manual"
        },
        {
            "type": "text",
            "id": "filter",
            "default": "Rude",
            "label": "filter"
        },
        {
            "type": "text",
            "id": "filter1",
            "default": "Funny",
            "label": "filter1"
        },
        {
            "type": "text",
            "id": "filter2",
            "default": "Bestseller",
            "label": "filter2"
        },
        {
            "type": "text",
            "id": "filter3",
            "default": "New In",
            "label": "filter3"
        },
        {
            "type": "text",
            "id": "filter4",
            "default": "Balance",
            "label": "filter4"
        },
        {
            "type": "range",
            "id": "products_to_show_slider",
            "min": 2,
            "max": 100,
            "step": 1,
            "default": 90,
            "label": "t:sections.collection-gift-slider.settings.products_to_show_slider.label"
        },
        {
            "type": "header",
            "content": "t:sections.collection-gift-slider.settings.header_desktop.content"
        },
        {
            "type": "range",
            "id": "columns_desktop",
            "min": 1,
            "max": 6,
            "step": 1,
            "default": 5,
            "label": "t:sections.collection-gift-slider.settings.header_desktop.label"
        },
        {
            "type": "header",
            "content": "t:sections.collection-gift-slider.settings.header_small_desktop.content"
        },
        {
            "type": "range",
            "id": "columns_small_desktop",
            "min": 1,
            "max": 6,
            "step": 1,
            "default": 4,
            "label": "t:sections.collection-gift-slider.settings.header_small_desktop.label"
        },
        {
            "type": "header",
            "content": "t:sections.collection-gift-slider.settings.header_tablet.content"
        },
        {
            "type": "range",
            "id": "columns_tablet",
            "min": 1,
            "max": 5,
            "step": 1,
            "default": 3,
            "label": "t:sections.collection-gift-slider.settings.header_tablet.label"
        },
        {
            "type": "header",
            "content": "t:sections.collection-gift-slider.settings.header_mobile.content"
        },
        {
            "type": "range",
            "id": "columns_mobile",
            "min": 1,
            "max": 3,
            "step": 1,
            "default": 2,
            "label": "t:sections.collection-gift-slider.settings.header_mobile.label"
        },
        {
            "type": "header",
            "content": "t:sections.all.padding.section_padding_heading"
        },
       
    ],
    "presets": [
        {
            "name": "t:sections.collection-gift-slider.presets.name"
        }
    ]
}
{% endschema %}
