{% assign tag_list = section.settings.filter_tag_1
  | append: ','
  | append: section.settings.filter_tag_2
  | append: ','
  | append: section.settings.filter_tag_3
  | append: ','
  | append: section.settings.filter_tag_4
  | append: ','
  | append: section.settings.filter_tag_5
  | split: ','
%}
{% assign section_id = section.id %}

<section
  class="section collection-sliders"
  id="collections-slider-{{ section_id }}"
  style="background-color:{{ section.settings.background_color }}; padding-top: {{ section.settings.padding_top }}px; padding-bottom: {{ section.settings.padding_bottom }}px;"
>
  <div class="collection-slider-wrapper">
    {% if section.settings.title != blank %}
      <h2 class="collection-slider-title">{{ section.settings.title }}</h2>
    {% endif %}

    <div class="collection-filter">
      {% assign active_set = false %}
      {% for tag in tag_list %}
        {% assign tag_trimmed = tag | strip %}
        {% if tag_trimmed != blank %}
          <button
            class="collection-slider-filter {% unless active_set %}active-filter-bt{% assign active_set = true %}{% endunless %}"
            data-tag="{{ tag_trimmed | handleize }}"
            data-url="/collections/{{ section.settings.collection }}/{{ tag_trimmed | handleize }}?sort_by={{ section.settings.sort_order }}"
          >
            {{ tag_trimmed }}
          </button>
        {% endif %}
      {% endfor %}
    </div>

    <div class="collection-slider-items">
      <div id="ajax-product-grid-{{ section_id }}" class="ajax-slider-grid">
        <p>Loading products...</p>
      </div>
      <div class="custom-controls custom-controls-navigation">
        <button id="prev-{{ section_id }}" data-controls="prev">
          <svg width="15" height="26" viewBox="0 0 15 26" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M13.7776 0.592285L1.41989 12.95L13.7776 25.3077" stroke="black" stroke-linecap="round"/>
          </svg>
        </button>
        <button id="next-{{ section_id }}" data-controls="next">
          <svg width="15" height="26" viewBox="0 0 15 26" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M1.44727 25.3569L13.8224 12.9818L1.44727 0.606711" stroke="black" stroke-linecap="round"/>
          </svg>
        </button>
      </div>
    </div>

    <div class="button-style">
      <a
        href="/collections/{{ section.settings.collection }}?sort_by={{ section.settings.sort_order }}"
        class="collection-slider-view-all"
        >View All</a
      >
    </div>
  </div>
</section>
<script>
  new Promise(async function(resolve, reject){
        while (!loadStatus.react_loaded) {
            await delay(50);
        }
        if(!loadStatus.create_slider_started){
            loadStatus.create_slider_started = true;
            loadJS("create_slider", "{{ 'create-slider.js' | asset_url }}", "create_slider_loaded", true);
        }
        resolve(true);
    });
    new Promise(async function(resolve, reject){
        while (!loadStatus.create_slider_loaded) {
            await delay(50);
        }
        if(!window.addFavourite){
            window.addFavourite = addFavourite;
            window.removeFavourite = removeFavourite;
            window.addToBasket = addToBasket;
        }
        resolve(true);
    });
  document.addEventListener("DOMContentLoaded", function () {
    const sectionId = "{{ section_id }}";
    const filters = document.querySelectorAll(`#collections-slider-${sectionId} .collection-slider-filter`);
    const productGrid = document.getElementById(`ajax-product-grid-${sectionId}`);

    function loadProducts(url) {
      let loaderHTML = '';
      for (let i = 0; i < 6; i++) {
        loaderHTML += `<div class="collection-slider-item-product-temp"><div class="collection-slider-item-product-temp-item"><div class="product-add-loader loading"></div></div></div>`;
      }
      productGrid.innerHTML = loaderHTML;
      fetch(url)
        .then(response => response.text())
        .then(html => {
          const parser = new DOMParser();
          const doc = parser.parseFromString(html, 'text/html');
          const grid = doc.querySelector('[data-id^="collection-product-grid"], .product-grid, .grid');
          productGrid.innerHTML = grid ? grid.innerHTML : '<p style="font-size:20px;">No products found.</p>';
          initializeSlider();
        })
        .catch(error => {
          console.error('Error loading products:', error);
          productGrid.innerHTML = '<p>Failed to load products.</p>';
        });
    }

    function initializeSlider() {
      const slider = tns({
        container: `#ajax-product-grid-${sectionId}`,
        items: 1,
        slideBy: 'page',
        autoplay: false,
        controls: false,
        nav: false,
        responsive: {
              200: { items: {{ section.settings.columns_mobile }} },
              750: { items: {{ section.settings.columns_tablet }} },
              990: { items: {{ section.settings.columns_small_desktop }} },
              1250: { items: {{ section.settings.columns_desktop }} }
            }
      });

      document.getElementById(`prev-${sectionId}`).addEventListener('click', function () {
        slider.goTo('prev');
      });

      document.getElementById(`next-${sectionId}`).addEventListener('click', function () {
        slider.goTo('next');
      });
    }

    filters.forEach(button => {
      button.addEventListener('click', function () {
        filters.forEach(b => b.classList.remove('active-filter-bt'));
        this.classList.add('active-filter-bt');
        const url = this.dataset.url;
        loadProducts(url);
      });
    });

    // Load first tag on initial load
    const defaultButton = document.querySelector(`#collections-slider-${sectionId} .collection-slider-filter.active-filter-bt`);
    if (defaultButton) {
      loadProducts(defaultButton.dataset.url);
    }
  });
</script>

{% schema %}
{
  "name": "Collection Slider Ajax",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Section Title",
      "default": "Featured Collections"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Select Collection"
    },
    {
      "type": "select",
      "id": "sort_order",
      "label": "Sort Products By",
      "default": "best-selling",
      "options": [
        { "value": "manual", "label": "Manual (Custom Order)" },
        { "value": "best-selling", "label": "Best Selling" }
      ]
    },
    {
      "type": "range",
      "id": "product_limit",
      "label": "Max Products per Tag",
      "default": 10,
      "min": 1,
      "max": 50
    },
    {
      "type": "text",
      "id": "filter_tag_1",
      "label": "Filter Tag 1"
    },
    {
      "type": "text",
      "id": "filter_tag_2",
      "label": "Filter Tag 2"
    },
    {
      "type": "text",
      "id": "filter_tag_3",
      "label": "Filter Tag 3"
    },
    {
      "type": "text",
      "id": "filter_tag_4",
      "label": "Filter Tag 4"
    },
    {
      "type": "text",
      "id": "filter_tag_5",
      "label": "Filter Tag 5"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background Color",
      "default": "#ffffff"
    },
    {
        "type": "header",
        "content": "t:sections.collection-slider.settings.header_desktop.content"
    },
    {
        "type": "range",
        "id": "columns_desktop",
        "min": 1,
        "max": 6,
        "step": 1,
        "default": 5,
        "label": "t:sections.collection-slider.settings.header_desktop.label"
    },
    {
        "type": "header",
        "content": "t:sections.collection-slider.settings.header_small_desktop.content"
    },
    {
        "type": "range",
        "id": "columns_small_desktop",
        "min": 1,
        "max": 6,
        "step": 1,
        "default": 4,
        "label": "t:sections.collection-slider.settings.header_small_desktop.label"
    },
    {
        "type": "header",
        "content": "t:sections.collection-slider.settings.header_tablet.content"
    },
    {
        "type": "range",
        "id": "columns_tablet",
        "min": 1,
        "max": 5,
        "step": 1,
        "default": 3,
        "label": "t:sections.collection-slider.settings.header_tablet.label"
    },
    {
        "type": "header",
        "content": "t:sections.collection-slider.settings.header_mobile.content"
    },
    {
        "type": "range",
        "id": "columns_mobile",
        "min": 1,
        "max": 3,
        "step": 1,
        "default": 2,
        "label": "t:sections.collection-slider.settings.header_mobile.label"
    },
    {
        "type": "header",
        "content": "t:sections.all.padding.section_padding_heading"
    },
    {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_top",
        "default": 36
    },
    {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_bottom",
        "default": 36
    }
  ],
  "presets": [
    {
      "name": "Collection Slider Ajax",
      "category": "Custom"
    }
  ]
}
{% endschema %}
